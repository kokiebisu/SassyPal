/*
Display
*/
$display: (
  hidden: none,
  block: block,
  inline-block: inline-block,
  inline: inline,
  flex: flex,
  inline-flex: inline-flex,
  grid: grid,
  inline-grid: inline-grid,
  table: table,
  table-caption: table-caption,
  table-cell: table-cell,
);

@mixin display-modifiers {
  @each $key, $value in $display {
    .#{$key} {
      display: #{$value};
    }
  }
}

@include display-modifiers;

@include breakpoint-modifiers {
  @each $key, $value in $display {
    &--#{$key} {
      display: #{$value};
    }
  }
}

/*
Justify Content
*/
$justifyContent: (
  start: flex-start,
  center: center,
  end: flex-end,
  between: space-between,
  around: space-around,
);

@mixin justifyContent-modifiers {
  @each $key, $value in $justifyContent {
    &-#{$key} {
      justify-content: #{$value};
    }
  }
}

.justify {
  @include justifyContcent-modifiers;
}

/*
Align Items
*/
$alignItems: (
  stretch: stretch,
  start: flex-start,
  center: center,
  end: flex-end,
  baseline: baseline,
);

@mixin alignItem-modifiers {
  @each $key, $value in $alignItems {
    &-#{$key} {
      align-items: #{$value};
    }
  }
}

.items {
  @include alignItem-modifiers;
}

/*
Flex Direction
*/
$flex-direction: (
  row: row,
  column: column,
);

@mixin flexDirection-modifiers($reverse) {
  @each $key, $value in $flex-direction {
    @if $reverse {
      &-#{$key}-reverse {
        flex-direction: #{$value}-reverse;
      }
    } @else {
      &-#{$key} {
        flex-direction: #{$value};
      }
    }
  }
}

.flex {
  @include flexDirection-modifiers($reverse: false);
  @include flexDirection-modifiers($reverse: true);
}

@include breakpoint-modifiers {
  &--flex {
    @include flexDirection-modifiers($reverse: false);
    @include flexDirection-modifiers($reverse: true);
  }
}
